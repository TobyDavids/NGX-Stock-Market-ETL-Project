name: Run Selenium Scraper

on:
  schedule:
    - cron: "0 16 * * 1-5" # Runs at 5 PM UTC+1 (Nigeria time), Monday to Friday
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11.5"

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo mkdir -p /etc/apt/sources.list.d
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get -y install google-chrome-stable

      - name: Install ChromeDriver
        run: |
          CHROMEDRIVER_VERSION="137.0.7151.70"
          echo "Installing ChromeDriver version: $CHROMEDRIVER_VERSION"
          wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip"
          unzip chromedriver-linux64.zip
          chmod +x chromedriver-linux64/chromedriver
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Execute python script with debug output
        run: |
          python scrap.py 


      - name: Check log contents
        run: |
          echo "=== Web Scraping Log Contents ==="
          if [ -f "logs/web_scrap_log.txt" ]; then
            cat logs/web_scrap_log.txt
          else
            echo "Log file not found"
          fi
          echo "=== Python Script Output ==="
          if [ -f "python_output.log" ]; then
            cat python_output.log
          else
            echo "Python output log not found"
          fi


      - name: Find most recent CSV file
        id: find_csv
        run: |
          # Wait for file to be created (up to 30 seconds)
          for i in {1..30}; do
            if ls data/data_*.csv 1> /dev/null 2>&1; then
              LATEST_CSV=$(ls -t data/data_*.csv | head -n1)
              echo "latest_csv=$LATEST_CSV" >> $GITHUB_OUTPUT
              echo "Found CSV file: $LATEST_CSV"
              exit 0
            fi
            echo "Waiting for CSV file to be created (attempt $i/30)"
            sleep 1
          done
          echo "No CSV file found after 30 seconds"
          exit 1

      - name: Install jq
        run: |
          sudo apt-get install jq

      - name: Send email using Resend
        run: |
          # Create the email content
          cat << EOF > email.html
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Stock Data Report</title>
          </head>
          <body style="margin: 0; padding: 0; font-family: Arial, sans-serif; background-color: #f4f4f4;">
              <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                  <div style="background-color: #ffffff; border-radius: 8px; padding: 30px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);">
                      <div style="text-align: center; margin-bottom: 30px;">
                          <h1 style="color: #2c3e50; margin: 0; font-size: 24px;">Stock Data Report</h1>
                          <p style="color: #7f8c8d; margin: 10px 0 0 0; font-size: 16px;">Generated on $(date +%Y-%m-%d)</p>
                      </div>
                      
                      <div style="background-color: #f8f9fa; border-radius: 6px; padding: 20px; margin-bottom: 30px;">
                          <h2 style="color: #2c3e50; margin: 0 0 15px 0; font-size: 18px;">Report Summary</h2>
                          <p style="color: #34495e; margin: 0; line-height: 1.6;">
                              Please find attached the latest stock data report. This report contains the most up-to-date information from the Nigerian Stock Exchange.
                          </p>
                      </div>

                      <div style="background-color: #e8f4f8; border-radius: 6px; padding: 20px; margin-bottom: 30px;">
                          <h2 style="color: #2c3e50; margin: 0 0 15px 0; font-size: 18px;">Attachment</h2>
                          <p style="color: #34495e; margin: 0; line-height: 1.6;">
                              The report is attached to this email in CSV format. You can open it with any spreadsheet application.
                          </p>
                      </div>

                      <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
                          <p style="color: #7f8c8d; margin: 0; font-size: 14px;">
                              This is an automated report. Please do not reply to this email.
                          </p>
                      </div>
                  </div>
              </div>
          </body>
          </html>
          EOF

          # Send email using curl and Resend API
          curl -X POST 'https://api.resend.com/emails' \
            -H 'Authorization: Bearer ${{ secrets.RESEND_API_KEY }}' \
            -H 'Content-Type: application/json' \
            -d '{
              "from": "Stocks Automation <no-reply@dataengineeringcommunity.com>",
              "to": ["tobye070@gmail.com", "chideraozigbo@gmail.com"],
              "subject": "Stock Data Report - '"$(date +%Y-%m-%d)"'",
              "html": '"$(cat email.html | jq -Rs .)"',
              "attachments": [
                {
                  "filename": "'"$(basename "${{ steps.find_csv.outputs.latest_csv }}")"'",
                  "content": "'"$(base64 -w 0 "${{ steps.find_csv.outputs.latest_csv }}")"'"
                }
              ]
            }'
